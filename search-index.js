var searchIndex = JSON.parse('{\
"msgproc":{"doc":"…","t":[0,8,3,3,11,11,11,11,0,0,11,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,3,11,11,11,11,11,11,10,11,11,10,11,11,11,11,10,11,10,11,10,11,10,11,11,11,10,11,11,10,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["prelude","IProcessor","MsgProc","MsgProcConfig","borrow","borrow","borrow_mut","borrow_mut","config","consumer","create","default","execute","from","from","into","into","message","new","run","set_consumer_buffer_size","set_processor","set_processor_buffer_size","set_stream_consumer_param","set_topics","try_from","try_from","try_into","try_into","type_id","type_id","Headers","Message","OwnedMessage","borrow","borrow_mut","clone","clone_into","fmt","from","headers","headers","into","key","key","key_view","key_view","new","offset","offset","partition","partition","payload","payload","payload_mut","payload_mut","payload_view","payload_view","timestamp","timestamp","to_owned","topic","topic","try_from","try_into","type_id","Message","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","offset","partition","payload","to_owned","topic","try_from","try_into","type_id"],"q":["msgproc","msgproc::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","msgproc::prelude::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","msgproc::prelude::message","","","","","","","","","","","","","","","",""],"d":["","crate::msgproc::MsgProc…","Kafkaから消費したメッセージを処理する","<code>MsgProc</code>の設定","","","","","","","現在の設定値を使用して<code>MsgProc</code>を作成する","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","空の設定を新規作成する","<code>MsgProc</code>を実行する","Kafkaから取得したメッセージを<code>MessageStream</code>…","<code>IProcessor</code>を設定する","<code>MessageStream</code>から取得したメッセージを<code>IProcessor</code>…","<code>IStreamConsumer</code>の設定値を設定する","<code>IStreamConsumer</code>で購読するトピックを設定する","","","","","","","The type of headers that this message contains.","A generic representation of a Kafka message.","A Kafka message that owns its backing data.","","","","","","Returns the argument unchanged.","Returns the headers of the message, or <code>None</code> if there are …","","Calls <code>U::from(self)</code>.","Returns the key of the message, or <code>None</code> if there is no key.","","Converts the raw bytes of the key to a reference of the …","Converts the raw bytes of the key to a reference of the …","Creates a new message with the specified content.","Returns the offset of the message within the partition.","","Returns the partition number where the message is stored.","","Returns the payload of the message, or <code>None</code> if there is no …","","Returns a mutable reference to the payload of the message, …","","Converts the raw bytes of the payload to a reference of …","Converts the raw bytes of the payload to a reference of …","Returns the message timestamp.","","","Returns the source topic of the message.","","","","","ユーザ定義のcrate::processor::IProcessor…","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,1,2,1,2,0,0,1,1,3,1,2,1,2,0,1,2,1,1,1,1,1,1,2,1,2,1,2,4,0,0,5,5,5,5,5,5,4,5,5,4,5,4,4,5,4,5,4,5,4,5,4,5,4,4,4,5,5,4,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["msgprocconfig",3]],["msgproc",3]],[[],["msgprocconfig",3]],[[["",0],["message",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],null,[[],["msgprocconfig",3]],[[["msgproc",3],["",26,[["future",8],["send",8]]]],["future",8]],[[["msgprocconfig",3],["usize",0]],["msgprocconfig",3]],[[["msgprocconfig",3],["iprocessor",8]],["msgprocconfig",3]],[[["msgprocconfig",3],["usize",0]],["msgprocconfig",3]],[[["msgprocconfig",3]],["msgprocconfig",3]],[[["msgprocconfig",3]],["msgprocconfig",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["ownedmessage",3]],["ownedmessage",3]],[[["",0],["",0]]],[[["ownedmessage",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["",0]],["option",4]],[[["ownedmessage",3]],["option",4,[["ownedheaders",3]]]],[[]],[[["",0]],["option",4]],[[["ownedmessage",3]],["option",4]],[[["",0]],["option",4,[["result",4]]]],[[["",0]],["option",4,[["result",4]]]],[[["option",4,[["vec",3,[["u8",0],["global",3]]]]],["option",4,[["vec",3,[["u8",0],["global",3]]]]],["string",3],["timestamp",4],["i32",0],["i64",0],["option",4,[["ownedheaders",3]]]],["ownedmessage",3]],[[["",0]],["i64",0]],[[["ownedmessage",3]],["i64",0]],[[["",0]],["i32",0]],[[["ownedmessage",3]],["i32",0]],[[["",0]],["option",4]],[[["ownedmessage",3]],["option",4]],[[["",0]],["option",4]],[[["ownedmessage",3]],["option",4]],[[["",0]],["option",4,[["result",4]]]],[[["",0]],["option",4,[["result",4]]]],[[["",0]],["timestamp",4]],[[["ownedmessage",3]],["timestamp",4]],[[["",0]]],[[["",0]],["str",0]],[[["ownedmessage",3]],["str",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["message",3]],["message",3]],[[["",0],["",0]]],[[["message",3],["formatter",3]],["result",6]],[[]],[[]],[[["ownedmessage",3]],["message",3]],[[["message",3]],["i64",0]],[[["message",3]],["i32",0]],[[["message",3]],["option",4,[["result",4]]]],[[["",0]]],[[["message",3]],["str",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"MsgProcConfig"],[3,"MsgProc"],[8,"IProcessor"],[8,"Message"],[3,"OwnedMessage"],[3,"Message"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
